// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectWarehouse.Files;

#nullable disable

namespace ProjectWarehouse.Migrations
{
    [DbContext(typeof(CompanyDbContext))]
    [Migration("20250603131804_intial")]
    partial class intial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectWarehouse.Files.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("ProjectWarehouse.Files.Item", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ItemUnitID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ItemUnitID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("ProjectWarehouse.Files.ItemUnit", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemID"));

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemID");

                    b.ToTable("ItemUnits");
                });

            modelBuilder.Entity("ProjectWarehouse.Files.Supplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("ProjectWarehouse.Files.SupplyPermit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("SID")
                        .HasColumnType("int");

                    b.Property<int>("WID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SID");

                    b.HasIndex("WID");

                    b.ToTable("SupplyPermits");
                });

            modelBuilder.Entity("ProjectWarehouse.Files.SupplyPermitItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SPID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ItemID");

                    b.HasIndex("SPID");

                    b.ToTable("SupplyPermitItems");
                });

            modelBuilder.Entity("ProjectWarehouse.Files.Transfer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("FromW")
                        .HasColumnType("int");

                    b.Property<int>("SID")
                        .HasColumnType("int");

                    b.Property<int>("ToW")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FromW");

                    b.HasIndex("SID");

                    b.HasIndex("ToW");

                    b.ToTable("Transfers");
                });

            modelBuilder.Entity("ProjectWarehouse.Files.TransferItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("TransferID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IID");

                    b.HasIndex("TransferID");

                    b.ToTable("TransferItems");
                });

            modelBuilder.Entity("ProjectWarehouse.Files.Warehouse", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("ProjectWarehouse.Files.WithdrawPermit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("WID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CID");

                    b.HasIndex("WID");

                    b.ToTable("WithdrawPermits");
                });

            modelBuilder.Entity("ProjectWarehouse.Files.WithdrawPermitItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("WPID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ItemID");

                    b.HasIndex("WPID");

                    b.ToTable("WithdrawPermitItems");
                });

            modelBuilder.Entity("ProjectWarehouse.Files.Item", b =>
                {
                    b.HasOne("ProjectWarehouse.Files.ItemUnit", "ItemUnit")
                        .WithMany("Items")
                        .HasForeignKey("ItemUnitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemUnit");
                });

            modelBuilder.Entity("ProjectWarehouse.Files.SupplyPermit", b =>
                {
                    b.HasOne("ProjectWarehouse.Files.Supplier", "Supplier")
                        .WithMany("SupplyPermits")
                        .HasForeignKey("SID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectWarehouse.Files.Warehouse", "Warehouse")
                        .WithMany("SupplyPermits")
                        .HasForeignKey("WID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("ProjectWarehouse.Files.SupplyPermitItem", b =>
                {
                    b.HasOne("ProjectWarehouse.Files.Item", "Item")
                        .WithMany("SupplyPermitItem")
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectWarehouse.Files.SupplyPermit", "SupplyPermit")
                        .WithMany("supplyPermitItems")
                        .HasForeignKey("SPID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("SupplyPermit");
                });

            modelBuilder.Entity("ProjectWarehouse.Files.Transfer", b =>
                {
                    b.HasOne("ProjectWarehouse.Files.Warehouse", "FromWarehouse")
                        .WithMany("TransfersFrom")
                        .HasForeignKey("FromW")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProjectWarehouse.Files.Supplier", "Supplier")
                        .WithMany("Transfers")
                        .HasForeignKey("SID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectWarehouse.Files.Warehouse", "ToWarehouse")
                        .WithMany("TransfersTo")
                        .HasForeignKey("ToW")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FromWarehouse");

                    b.Navigation("Supplier");

                    b.Navigation("ToWarehouse");
                });

            modelBuilder.Entity("ProjectWarehouse.Files.TransferItem", b =>
                {
                    b.HasOne("ProjectWarehouse.Files.Item", "Item")
                        .WithMany("TransferItem")
                        .HasForeignKey("IID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectWarehouse.Files.Transfer", "Transfer")
                        .WithMany("TransferItems")
                        .HasForeignKey("TransferID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Transfer");
                });

            modelBuilder.Entity("ProjectWarehouse.Files.WithdrawPermit", b =>
                {
                    b.HasOne("ProjectWarehouse.Files.Client", "Client")
                        .WithMany("WithdrawPermit")
                        .HasForeignKey("CID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectWarehouse.Files.Warehouse", "Warehouse")
                        .WithMany("WithdrawPermit")
                        .HasForeignKey("WID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("ProjectWarehouse.Files.WithdrawPermitItem", b =>
                {
                    b.HasOne("ProjectWarehouse.Files.Item", "Item")
                        .WithMany("WithdrawPermitItem")
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectWarehouse.Files.WithdrawPermit", "WithdrawPermit")
                        .WithMany("withdrawPermitItems")
                        .HasForeignKey("WPID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("WithdrawPermit");
                });

            modelBuilder.Entity("ProjectWarehouse.Files.Client", b =>
                {
                    b.Navigation("WithdrawPermit");
                });

            modelBuilder.Entity("ProjectWarehouse.Files.Item", b =>
                {
                    b.Navigation("SupplyPermitItem");

                    b.Navigation("TransferItem");

                    b.Navigation("WithdrawPermitItem");
                });

            modelBuilder.Entity("ProjectWarehouse.Files.ItemUnit", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ProjectWarehouse.Files.Supplier", b =>
                {
                    b.Navigation("SupplyPermits");

                    b.Navigation("Transfers");
                });

            modelBuilder.Entity("ProjectWarehouse.Files.SupplyPermit", b =>
                {
                    b.Navigation("supplyPermitItems");
                });

            modelBuilder.Entity("ProjectWarehouse.Files.Transfer", b =>
                {
                    b.Navigation("TransferItems");
                });

            modelBuilder.Entity("ProjectWarehouse.Files.Warehouse", b =>
                {
                    b.Navigation("SupplyPermits");

                    b.Navigation("TransfersFrom");

                    b.Navigation("TransfersTo");

                    b.Navigation("WithdrawPermit");
                });

            modelBuilder.Entity("ProjectWarehouse.Files.WithdrawPermit", b =>
                {
                    b.Navigation("withdrawPermitItems");
                });
#pragma warning restore 612, 618
        }
    }
}
